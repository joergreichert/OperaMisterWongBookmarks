/*
* generated by Xtext
*/
grammar InternalMisterWongDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package de.abg.jreichert.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.abg.jreichert.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import de.abg.jreichert.services.MisterWongDslGrammarAccess;

}

@parser::members {

 	private MisterWongDslGrammarAccess grammarAccess;
 	
    public InternalMisterWongDslParser(TokenStream input, MisterWongDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "BookmarkFile";	
   	}
   	
   	@Override
   	protected MisterWongDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleBookmarkFile
entryRuleBookmarkFile returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBookmarkFileRule()); }
	 iv_ruleBookmarkFile=ruleBookmarkFile 
	 { $current=$iv_ruleBookmarkFile.current; } 
	 EOF 
;

// Rule BookmarkFile
ruleBookmarkFile returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<!DOCTYPE' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getBookmarkFileAccess().getDOCTYPEKeyword_0());
    }
	otherlv_1='NETSCAPE-Bookmark-file-1>' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBookmarkFileAccess().getNETSCAPEBookmarkFile1Keyword_1());
    }
	otherlv_2='<META' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getBookmarkFileAccess().getMETAKeyword_2());
    }
	otherlv_3='HTTP-EQUIV="Content-Type"' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getBookmarkFileAccess().getHTTPEQUIVContentTypeKeyword_3());
    }
	otherlv_4='CONTENT="text/html; charset=UTF-8">' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getBookmarkFileAccess().getCONTENTTextHtmlCharsetUTF8Keyword_4());
    }
(
(
		lv_name_5_0=RULE_TITLE
		{
			newLeafNode(lv_name_5_0, grammarAccess.getBookmarkFileAccess().getNameTITLETerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBookmarkFileRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_5_0, 
        		"TITLE");
	    }

)
)(
(
		lv_header_6_0=RULE_HEADER
		{
			newLeafNode(lv_header_6_0, grammarAccess.getBookmarkFileAccess().getHeaderHEADERTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBookmarkFileRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"header",
        		lv_header_6_0, 
        		"HEADER");
	    }

)
)	otherlv_7='<DL>' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getBookmarkFileAccess().getDLKeyword_7());
    }
	otherlv_8='<p>' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getBookmarkFileAccess().getPKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBookmarkFileAccess().getLinksLinkParserRuleCall_9_0()); 
	    }
		lv_links_9_0=ruleLink		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBookmarkFileRule());
	        }
       		add(
       			$current, 
       			"links",
        		lv_links_9_0, 
        		"Link");
	        afterParserOrEnumRuleCall();
	    }

)
)*	otherlv_10='</p>' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getBookmarkFileAccess().getPKeyword_10());
    }
	otherlv_11='</DL>' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getBookmarkFileAccess().getDLKeyword_11());
    }
(	otherlv_12='</META>' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getBookmarkFileAccess().getMETAKeyword_12());
    }
)?)
;





// Entry rule entryRuleLink
entryRuleLink returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getLinkRule()); }
	 iv_ruleLink=ruleLink 
	 { $current=$iv_ruleLink.current; } 
	 EOF 
;

// Rule Link
ruleLink returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='<DT>' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getLinkAccess().getDTKeyword_0());
    }
	otherlv_1='<A' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getLinkAccess().getAKeyword_1());
    }
	otherlv_2='HREF' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getLinkAccess().getHREFKeyword_2());
    }
	otherlv_3='=' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getLinkAccess().getEqualsSignKeyword_3());
    }
(
(
		lv_url_4_0=RULE_STRING
		{
			newLeafNode(lv_url_4_0, grammarAccess.getLinkAccess().getUrlSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"url",
        		lv_url_4_0, 
        		"STRING");
	    }

)
)	otherlv_5='ADD_DATE' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getLinkAccess().getADD_DATEKeyword_5());
    }
	otherlv_6='=' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getLinkAccess().getEqualsSignKeyword_6());
    }
(
(
		lv_addDate_7_0=RULE_STRING
		{
			newLeafNode(lv_addDate_7_0, grammarAccess.getLinkAccess().getAddDateSTRINGTerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"addDate",
        		lv_addDate_7_0, 
        		"STRING");
	    }

)
)	otherlv_8='LAST_MODIFIED' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getLinkAccess().getLAST_MODIFIEDKeyword_8());
    }
	otherlv_9='=' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getLinkAccess().getEqualsSignKeyword_9());
    }
(
(
		lv_lastModified_10_0=RULE_STRING
		{
			newLeafNode(lv_lastModified_10_0, grammarAccess.getLinkAccess().getLastModifiedSTRINGTerminalRuleCall_10_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"lastModified",
        		lv_lastModified_10_0, 
        		"STRING");
	    }

)
)	otherlv_11='TAGS' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getLinkAccess().getTAGSKeyword_11());
    }
	otherlv_12='=' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getLinkAccess().getEqualsSignKeyword_12());
    }
(
(
		lv_tags_13_0=RULE_STRING
		{
			newLeafNode(lv_tags_13_0, grammarAccess.getLinkAccess().getTagsSTRINGTerminalRuleCall_13_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"tags",
        		lv_tags_13_0, 
        		"STRING");
	    }

)
)(
(
		lv_name_14_0=RULE_LINK_NAME
		{
			newLeafNode(lv_name_14_0, grammarAccess.getLinkAccess().getNameLINK_NAMETerminalRuleCall_14_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_14_0, 
        		"LINK_NAME");
	    }

)
)	otherlv_15='</DT>' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getLinkAccess().getDTKeyword_15());
    }
(
(
		lv_description_16_0=RULE_DESCRIPTION
		{
			newLeafNode(lv_description_16_0, grammarAccess.getLinkAccess().getDescriptionDESCRIPTIONTerminalRuleCall_16_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getLinkRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"description",
        		lv_description_16_0, 
        		"DESCRIPTION");
	    }

)
))
;





RULE_TITLE : '<TITLE>' ( options {greedy=false;} : . )*'</TITLE>';

RULE_HEADER : '<H1>' ( options {greedy=false;} : . )*'</H1>';

RULE_LINK_NAME : '>' ( options {greedy=false;} : . )*'</A>';

RULE_DESCRIPTION : '<DD>' ( options {greedy=false;} : . )*'</DD>';

RULE_WS : (' '|'\t')+;

RULE_NL : ('\r'|'\n')+;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ~('"')* '"'|'\'' ~('\'')* '\'');

RULE_ANY_OTHER : .;


